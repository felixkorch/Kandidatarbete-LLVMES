#macro STORE_RESULT_A 0
    STX tmp
    LDX result_idx
    STA $3000,X
    INX
    STX result_idx
    LDX tmp
#endmacro

.org $8000

main:
; Test AND Immediate
    LDA #$AA
    AND #$A0
    STORE_RESULT_A ; $A0
; Test AND Immediate
    LDA #$FF
    AND #$01
    STORE_RESULT_A ; $01
; Test AND Absolute
    LDX #$55
    STX $00
    LDA #$AA
    AND $00
    STORE_RESULT_A ; $00
; Test AND Absolute (and ROR Accumulator!)
    LDA #$AA
    ROR     ; #55
    AND $00
    STORE_RESULT_A ; $55
check_memory:
    LDX #$00
check_memory_loop:
    LDA $3000,X
    CMP expected_result,X
    BNE print_fail
    INX
    CPX #4                     ; Length of expected_results
    BNE check_memory_loop
    LDX #$00 ; Reset X register
print_msg:
    LDA success_str,X
    BEQ success
    STA $2008
    INX
    JMP print_msg
success:
    LDA #10 ; Newline
    STA $2008 ; Print new line
    LDA #0
    STA $200F
print_fail:
    LDX #$00 ; Reset X register
print_msg2:
    LDA fail_str,X
    BEQ fail
    STA $2008
    INX
    JMP print_msg2
fail:
    LDA #10 ; Newline
    STA $2008 ; Print new line
    LDA #1
    STA $200F
success_str:
.db "AND test passed!", 0
fail_str:
.db "AND test failed!", 0
expected_result:
.db $A0, $01, $00, $55
result_idx:
.db 0
tmp:
.db 0



.org $FFFC
.dw main ; Reset vector
