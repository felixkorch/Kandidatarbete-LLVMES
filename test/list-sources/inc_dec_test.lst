#macro STORE_RESULT_A 0
    STX tmp
    PHA
    LDX result_idx
    STA $3000,X
    INX
    STX result_idx
    PLA
    LDX tmp
#endmacro
#macro STORE_RESULT_X 0
    PHA
    TXA
    STX tmp
    LDX result_idx
    STA $3000,X
    INX
    STX result_idx
    LDX tmp
    PLA
#endmacro
#macro STORE_RESULT_Y 0
    PHA
    TYA
    STX tmp
    LDX result_idx
    STA $3000,X
    INX
    STX result_idx
    LDX tmp
    PLA
#endmacro
#macro STORE_STATUS 0
    PHA
    PHP
    PLA
    STX tmp
    LDX result_idx
    STA $3000,X
    INX
    STX result_idx
    LDX tmp
    PLA
#endmacro

.org $8000

main:
; Test INX at overflow
    LDX #$FE
    INX
    STORE_STATUS                ; X = FF
    INX
    STORE_STATUS                ; X = 00
    INX
    STORE_RESULT_X              ; $01
; Test DEX at overflow
    DEX
    STORE_STATUS                ; X = 00
    DEX
    STORE_STATUS                ; X = FF
    DEX
    STORE_RESULT_X              ; $FE
; Test INX at overflow
    LDY #$FE
    INY
    STORE_STATUS                ; Y = FF
    INY
    STORE_STATUS                ; Y = 00
    INY
    STORE_RESULT_Y              ; $01
; Test DEX at overflow
    DEY
    STORE_STATUS                ; Y = 00
    DEY
    STORE_STATUS                ; Y = FF
    DEY
    STORE_RESULT_Y              ; $FE
; Test INC at overflow
    LDA #$FE
    STA $00
    STA $02
    STA $2000
    STA $2002
    LDX #$02
    INC $00
    STORE_STATUS                ; X = FF
    INC $00
    STORE_STATUS                ; X = 00
    INC $00
    LDA $00
    STORE_RESULT_A
    INC $00,X
    STORE_STATUS                ; X = FF
    INC $00,X
    STORE_STATUS                ; X = 00
    INC $00,X
    STORE_RESULT_A
    INC $2000
    STORE_STATUS                ; X = FF
    INC $2000
    STORE_STATUS                ; X = 00
    INC $2000
    STORE_RESULT_A
    INC $2000,X
    STORE_STATUS                ; X = FF
    INC $2000,X
    STORE_STATUS                ; X = 00
    INC $2000,X
    STORE_RESULT_A
; Test DEC at overflow
    DEC $00
    STORE_STATUS                ; X = 00
    DEC $00
    STORE_STATUS                ; X = FF
    DEC $00
    LDA $00
    STORE_RESULT_A
    DEC $00,X
    STORE_STATUS                ; X = 00
    DEC $00,X
    STORE_STATUS                ; X = FF
    DEC $00,X
    STORE_RESULT_A
    DEC $2000
    STORE_STATUS                ; X = 00
    DEC $2000
    STORE_STATUS                ; X = FF
    DEC $2000
    STORE_RESULT_A
    DEC $2000,X
    STORE_STATUS                ; X = 00
    DEC $2000,X
    STORE_STATUS                ; X = FF
    DEC $2000,X
    STORE_RESULT_A

check_memory:
    LDX #$00
check_memory_loop:
    LDA $3000,X
    CMP expected_result,X
    BNE print_fail
    INX
    CPX #36                     ; Length of expected_results
    BNE check_memory_loop
    LDX #$00 ; Reset X register
print_msg:
    LDA success_str,X
    BEQ success
    STA $2008
    INX
    JMP print_msg
success:
    LDA #10 ; Newline
    STA $2008 ; Print new line
    LDA #0
    STA $200F
print_fail:
    LDX #$00 ; Reset X register
print_msg2:
    LDA fail_str,X
    BEQ fail
    STA $2008
    INX
    JMP print_msg2
fail:
    LDA #10 ; Newline
    STA $2008 ; Print new line
    LDA #1
    STA $200F
success_str:
.db "Inc/dec tests passed!", 0
fail_str:
.db "Inc/dec tests failed!", 0
expected_result:

.db $B4, $36, $01, $36, $B4, $FE, $B4, $36
.db $01, $36, $B4, $FE, $B4, $36, $01, $B4
.db $36, $01, $B4, $36, $01, $B4, $36, $01
.db $36, $B4, $FE, $36, $B4, $FE, $36, $B4
.db $FE, $36, $B4, $FE
result_idx:
.db 0
tmp:
.db 0

.org $FFFC
.dw main ; Reset vector
